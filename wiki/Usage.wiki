#summary How to use JSON-RPC library

<wiki:toc max_depth="2" />

= Dependencies =
   * [http://code.google.com/p/google-gson/ Gson 1.4]
   * [http://www.slf4j.org/ SLF4J 1.5.6]

== Maven ==

{{{
<groupId>org.json.rpc</groupId>
   <artifactId>jsonrpc</artifactId>
   <name>JSON-RPC</name>
<version>1.0.0</version>
}}}

= Defining Interfaces =
Lets pickup an example of a _Calculator_ service. <br />

The contract will be defined as 
{{{

public interface Calculator {

   double add(double x, double y);

   double multiply(double x, double y);

   double average(double ...values);

}

}}}

The implementation will be 
{{{
public class CalculatorImpl implements Calculator {
   
   public double add(double x, double y) {
      return x + y;
   }

   public double multiply(double x, double y) {
      return x * y;
   }

   public  double average(double ...values) {
      if (values.length == 0) {
         return 0;
      }
      double sum = 0;
      for (double d : values) {
         sum += d;
      }
      return sum / values.length;
   }

}
}}}


= Binding Service Implementation =

Once the service is ready, it needs to be bound to the JSON-RPC Server to make it available.
{{{

private JsonRpcExecutor bind() {
   JsonRpcExecutor executor = new JsonRpcExecutor();

   Calculator calcImpl = new CalculatorImpl();
   executor.add("calc", calcImpl, Calculator.class); 

   // add more services here

   return executor;
}

}}}

= Hosting with a Servlet =
{{{
public class JsonRpcServlet extends HttpServlet {


}
}}}
= Access from Java Client =

= Access from !JavaScript Client =
TODO